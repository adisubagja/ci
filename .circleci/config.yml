version: 2.1
jobs:
  compile:
   docker:
      - image: ubuntu:18.04
   environment:
      GIT_EMAIL: 'romadhonadipermana279f@gmail.com'
      GIT_NAME: 'adislice'
      VENDOR: 'xiaomi'
      DEVICE: 'ugglite'
   steps:
      - run:
          name: Preparing environment
          command: |
           apt-get -y update && apt-get -y upgrade && apt-get -y install bc bison build-essential curl flex g++-multilib gcc gcc-multilib clang git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush schedtool squashfs-tools xsltproc zip zlib1g-dev unzip openjdk-8-jdk python ccache libtinfo5 repo libstdc++6 wget libssl-dev rsync
           mkdir -p ~/bin
           curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
           chmod a+x ~/bin/repo
           git config --global user.name $GIT_NAME
           git config --global user.email $GIT_EMAIL
           git config --global color.ui false
           git clone https://github.com/fabianonline/telegram.sh telegram
           source bot
      - run:
          name: Repo init
          command: |
           repo init --depth=1 -u git://github.com/BatikRecovery/br_manifest.git -b android-9.0
      - run:
          name: Repo sync
          command: |
           repo sync -j$(nproc --all)
      - run:
          name: Clone device tree
          command: |
           if [ -d "device/xiaomi/ugglite" ]; then
               rm device/xiaomi/ugglite -rf
               git clone https://github.com/adislice/twrp_device_xiaomi_ugglite -b br device/xiaomi/ugglite
           else
               git clone https://github.com/adislice/twrp_device_xiaomi_ugglite -b br device/xiaomi/ugglite
           fi
      - run:
          name: Building
          command: |
           source bot
           botInit
           export ALLOW_MISSING_DEPENDENCIES=true
           export TW_DEFAULT_LANGUAGE="en"
           export LC_ALL="C"
           source build/envsetup.sh
           lunch omni_${DEVICE}-eng
           sendMessage "⚙️ Build Started for $DEVICE"
           make recoveryimage -j$(nproc --all)
           ls -lh $(pwd)/out/target/product/${DEVICE}/
           export BUILDFILE_ZIP=$(find $(pwd)/out/target/product/${DEVICE}/*ugglite*.zip 2>/dev/null)
           export UPLOAD_PATH=$(pwd)/out/target/product/${DEVICE}/upload/
           echo $BUILDFILE_ZIP
           echo $UPLOAD_PATH
           mkdir ${UPLOAD_PATH}
           cp $BUILDFILE_ZIP $UPLOAD_PATH
           if [ -f $BUILDFILE_ZIP ]; then
             sendMessage "✅ Build Finished Successfully"
             sendDocument "$BUILDFILE_ZIP"
           else
             sendMessage "❌ Build Failed"
             exit 1
           fi
      - run:
          name: Fail.
          command: |
           source bot
           sendMessage "❌ Build Failed"
          when: on_fail
workflows:
  version: 2.1
  cooking:
    jobs:
      - compile
      
